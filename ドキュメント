【ユースケース】

ケース /　ブログ記事を表示する
シナリオ /　SNSで多くシェアされているサッカー関連のブログ記事を表示する

　◎必要な機能

  [ブログサイトを登録]
　　ライブドア、FC2のサッカーカテゴリの人気ブログをDBに登録する
  
  [RSSでブログ記事を取得]
　　登録済みのサイトからRSSを取得し、ブログ記事をDBに登録する
	  ArticleController#create_from_rss

  [SNSのシェア数を取得して更新]
   Facebookのシェア数、TwitterのRT数を取得し、DBの記事データ更新
   負荷を下げるため、100件程度に絞る
   
	  ArticleController#update_share_count
	  ↓
	  Model::ArticleUpdateShareCountAction#exec
  	  ↓
  	  lib::assets::SocialShareCountGetter#get_tw_rt_count_of_url
  	  lib::assets::SocialShareCountGetter#get_fb_share_count_of_url
  	  
  
  [記事の表示]
   
      ArticleController#index
      ↓
      Model::Article#select_todays_pop_articles






【テーブル構成】

sites
	id
	name
	url
	feed_url

news
	id
	title
	url
	site_id

keywords
	id
	name
	重要度

articles
	id
	title
	url
	site_id
	
	
	
	
	
【コントローラ / アクション】

site
	new
	index
	
article
	
	
news
	get_todays_news
		今日のニュースを取得してテーブルに保存する
		（RSS使用）

keyword
	
	
	
【テーブル】

categories
	id		
	name	政治、経済　サッカー　野球
	
sub_categories	
	id		
	name	2chまとめ、ブログ（その他）、ニュース

blog_rank_pages
	id
	category_id
	sub_category_id
	url
	blog_service_name
	max_register_count

sites
	id
	title　※nameから変更
	url
	feed_url
	category_id
	sub_category_id
	blog_service_name

articles
	id
	title
	url
	site_id
	rt_count
	fb_count
	published
	disabled
	
	



【用語一覧】



【最終目標 / 優先度順】
・動くページを公開する
・GitHubにソースを公開
・ドキュメントを作っておく
　　仕様書、設計書

【要実装】

・テーブル編成　再考
・サイトのモックアップを作る
・政治、経済ブログも見れるように
・記事のプレビューを見たい
・ツイッターの反応も見たい
・アメブロ、gooブログの登録
・認証	
・twitter_bootstrapを使用
・UIデザイン
・テストをRSpecで
・リファクタリング
・サーバにアップロードして、cronで運用
・メソッドをドキュメント化


【....φ(・ω・｀ )ﾒﾓﾒﾓ】

・クラス一覧必要だなあ・・・

・バリデーションはどう使う？
・テストをまとめる方法は？
・seedファイルからフィクスチャにデータを入れる方法
　・またはDBの内容からテストする方法

